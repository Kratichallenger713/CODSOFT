#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Task {
public:
    Task(const string& desc) : description(desc), completed(false) {}

    void markCompleted() {
        completed = true;
    }

    string getDescription() const {
        return description;
    }

    bool isCompleted() const {
        return completed;
    }

private:
    string description;
    bool completed;
};

void addTask(vector<Task>& tasks) {
    string desc;
    cout << "Enter the task description: ";
    cin.ignore(); // Move this line to the correct place
    getline(cin, desc);
    tasks.emplace_back(desc);
    cout << "Task added successfully.\n";
}

void viewTasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks available.\n";
        return;
    }

    for (size_t i = 0; i < tasks.size(); ++i) {
        cout << i + 1 << ". " << tasks[i].getDescription()
                  << " [" << (tasks[i].isCompleted() ? "Completed" : "Pending") << "]\n";
    }
}

void markTaskCompleted(vector<Task>& tasks) {
    size_t index;
    cout << "Enter the task number to mark as completed: ";
    cin >> index;

    if (index == 0 || index > tasks.size()) {
        cout << "Invalid task number.\n";
        return;
    }

    tasks[index - 1].markCompleted();
    cout << "Task marked as completed.\n";
}

void removeTask(vector<Task>& tasks) {
    size_t index;
    cout << "Enter the task number to remove: ";
    cin >> index;

    if (index == 0 || index > tasks.size()) {
        cout << "Invalid task number.\n";
        return;
    }

    tasks.erase(tasks.begin() + index - 1);
    cout << "Task removed successfully.\n";
}

int main() {
    vector<Task> tasks;
    int choice;

    do {
        cout << "\nTask Manager\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "0. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); // Add this line to clear the newline character

        switch (choice) {
        case 1:
            addTask(tasks);
            break;
        case 2:
            viewTasks(tasks);
            break;
        case 3:
            markTaskCompleted(tasks);
            break;
        case 4:
            removeTask(tasks);
            break;
        case 0:
            cout << "Exiting...\n";
            break;
        default:
            cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 0);

    return 0;
}
